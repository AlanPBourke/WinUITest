<Page
    x:Class="WinUITest.Pages.ProductPage2"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:converters="using:WinUITest.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:WinUITest.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    mc:Ignorable="d">

    <Page.Resources>
        <converters:DecimalToStringConverter x:Name="PriceDecimalConverter" />
    </Page.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="50*" />
            <RowDefinition Height="15*" />
            <RowDefinition Height="35*" />
        </Grid.RowDefinitions>

        <controls:DataGrid
            Name="ProductsDataGrid"
            Grid.Row="0"
            AutoGenerateColumns="False"
            ItemsSource="{x:Bind ViewModel.Products}"
            SelectionChanged="ProductsDataGrid_SelectionChanged"
            SelectionMode="Single">
            <controls:DataGrid.Columns>
                <controls:DataGridTextColumn
                    Binding="{Binding ProductCode}"
                    Header="Code"
                    IsReadOnly="True" />
                <controls:DataGridTextColumn
                    Binding="{Binding ProductName}"
                    Header="Name"
                    IsReadOnly="True" />
                <controls:DataGridTextColumn
                    Binding="{Binding Price}"
                    Header="Price"
                    IsReadOnly="True" />
            </controls:DataGrid.Columns>
        </controls:DataGrid>

        <CommandBar
            Name="ProductMaintenanceCommandBar"
            Grid.Row="1"
            Grid.ColumnSpan="1"
            HorizontalAlignment="Left"
            Background="Transparent"
            DefaultLabelPosition="Right"
            IsOpen="True">
            <AppBarButton
                Name="AddButton"
                Command="{x:Bind AddCommand}"
                Icon="Add"
                Label="Add"
                Visibility="{x:Bind ViewModel.IsNavigating, Mode=OneWay}" />
            <AppBarButton
                Name="EditButton"
                Command="{x:Bind EditCommand}"
                Icon="Edit"
                Label="Edit"
                Visibility="{x:Bind ViewModel.IsNavigating, Mode=OneWay}" />
            <AppBarButton
                Name="SaveButton"
                Command="{x:Bind SaveCommand}"
                Icon="Save"
                Label="Save"
                Visibility="{x:Bind ViewModel.IsAddingOrEditing, Mode=OneWay}" />
            <AppBarButton
                Name="CancelButton"
                Command="{x:Bind CancelCommand}"
                Icon="Cancel"
                Label="Cancel"
                Visibility="{x:Bind ViewModel.IsAddingOrEditing, Mode=OneWay}" />
            <AppBarButton
                Name="DeleteButton"
                Icon="Delete"
                Label="Delete"
                Visibility="{x:Bind ViewModel.IsNavigating, Mode=OneWay}">
                <AppBarButton.Flyout>
                    <Flyout>
                        <RelativePanel Width="600">
                            <TextBlock
                                Name="TextBlock"
                                Style="{ThemeResource BaseTextBlockStyle}"
                                Text="Product will be deleted. Do you want to continue?" />
                            <Button
                                Name="YesButton"
                                Click="DeleteConfirmationClick"
                                Content="Yes"
                                RelativePanel.Below="TextBlock" />
                            <Button
                                Click="DeleteCancelClick"
                                Content="No"
                                RelativePanel.Below="TextBlock"
                                RelativePanel.RightOf="YesButton" />
                        </RelativePanel>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
        </CommandBar>

        <Grid Name="ProductDetailsSubGrid" Grid.Row="2">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBox
                Name="CodeTextBox"
                Grid.Row="0"
                Grid.Column="0"
                Width="150"
                Header="Code"
                IsEnabled="{x:Bind ViewModel.IsAddingOrEditing, Mode=OneWay}"
                IsTabStop="True"
                Text="{x:Bind Path=ViewModel.SelectedProduct.ProductCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

            <TextBox
                Name="NameTextBox"
                Grid.Row="0"
                Grid.Column="1"
                Width="400"
                Header="Name"
                IsEnabled="{x:Bind ViewModel.IsAddingOrEditing, Mode=OneWay}"
                IsTabStop="True"
                Text="{x:Bind Path=ViewModel.SelectedProduct.ProductName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

            <TextBox
                Name="PriceTextBox"
                Grid.Row="1"
                Grid.Column="0"
                Width="200"
                Header="Price"
                IsEnabled="{x:Bind ViewModel.IsAddingOrEditing, Mode=OneWay}"
                IsTabStop="True"
                Text="{x:Bind Path=ViewModel.SelectedProduct.Price, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

            <!--<TextBox
                Name="PriceTextBox"
                Grid.Row="1"
                Grid.Column="0"
                Width="200"
                Header="Price"
                IsEnabled="{x:Bind ViewModel.IsAddingOrEditing, Mode=OneWay}"
                IsTabStop="True"
                Text="{x:Bind Path=ViewModel.SelectedProduct.Price, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DecimalToStringConverter}}" />-->


            <!--

            <TextBlock
                Name="ErrorTextBlock"
                Grid.Row="2"
                Grid.Column="0"
                Width="350"
                Foreground="Red"
                RelativePanel.Below="PriceTextBox"
                Text="{x:Bind ViewModel.SelectedProduct.Errors, Mode=OneWay}"
                Visibility="{x:Bind ViewModel.SelectedProduct.HasErrors, Mode=OneWay}" />

            <controls:InAppNotification
                x:Name="ProductMaintenanceInAppNotification"
                AnimationDuration="00:00:00.1000000"
                Content="This is a test message."
                HorizontalOffset="0"
                ShowDismissButton="True"
                StackMode="Replace"
                VerticalOffset="100">
                <controls:InAppNotification.ContentTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <TextBlock Margin="0,0,0,8" Text="{Binding Value}" />
                            <TextBlock
                                Opacity="0.8"
                                Style="{ThemeResource CaptionTextBlockStyle}"
                                Text="{Binding Key}" />
                        </StackPanel>
                    </DataTemplate>
                </controls:InAppNotification.ContentTemplate>
            </controls:InAppNotification>-->

        </Grid>

    </Grid>
</Page>
