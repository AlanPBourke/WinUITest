<Page
    x:Class="WinUITest.Pages.EditTransactionPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:data="using:WinUITest.Data"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewmodels="using:WinUITest.ViewModels"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    Loaded="Page_Loaded"
    mc:Ignorable="d">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="15*" />
            <RowDefinition Height="35*" />
            <RowDefinition Height="20*" />
            <RowDefinition Height="30*" />
        </Grid.RowDefinitions>

        <CommandBar
            Name="MainCommandBar"
            Grid.Row="0"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            Background="Transparent"
            DefaultLabelPosition="Right"
            IsOpen="True">
            <!--<AppBarButton
                Name="AddButton"
                Command="{x:Bind AddCommand}"
                Icon="Add"
                Label="New Detail Line"
                Visibility="{x:Bind ViewModel.IsNavigating, Mode=OneWay}" />-->
            <!--<AppBarButton
                Name="EditButton"
                Command="{x:Bind EditCommand}"
                Icon="Edit"
                Label="Edit"
                Visibility="{x:Bind ViewModel.IsNavigating, Mode=OneWay}" />-->

            <!--<AppBarButton
                Name="MainSaveButton"
                Command="{x:Bind SaveCommand}"
                Icon="Save"
                Label="Save"
                Visibility="{x:Bind ViewModel.IsAddingOrEditing, Mode=OneWay}" />-->

        </CommandBar>

        <StackPanel Grid.Row="1">

            <ComboBox
                Name="CustomersComboBox"
                Width="200"
                Header="Customers"
                IsEditable="false"
                ItemsSource="{x:Bind ViewModel.CustomerList}"
                Loaded="CustomersComboBox_Loaded"
                SelectionChanged="CustomersComboBox_SelectionChanged">
                <ComboBox.ItemTemplate>
                    <DataTemplate x:DataType="viewmodels:CustomerViewModel">
                        <StackPanel>
                            <TextBlock Text="{x:Bind CustomerCode}" />
                            <TextBlock Text="{x:Bind Name}" />
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

        </StackPanel>

        <Grid Grid.Row="2">

            <Grid.RowDefinitions>
                <RowDefinition Height="15*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <CommandBar
                Name="DetailLineCommandBar"
                Grid.Row="0"
                Grid.ColumnSpan="1"
                HorizontalAlignment="Left"
                Background="Transparent"
                DefaultLabelPosition="Right"
                IsOpen="True">
                <AppBarButton
                    Name="AddButton"
                    Command="{x:Bind AddDetailLineCommand}"
                    Icon="Add"
                    Label="Add"
                    Visibility="{x:Bind ViewModel.IsNavigating, Mode=OneWay}" />
                <!--<AppBarButton
                    Name="EditButton"
                    Command="{x:Bind EditCommand}"
                    Icon="Edit"
                    Label="Edit"
                    Visibility="{x:Bind ViewModel.IsNavigating, Mode=OneWay}" />-->
                <AppBarButton
                    Name="SaveButton"
                    Command="{x:Bind SaveDetailLineCommand}"
                    Icon="Save"
                    Label="Save"
                    Visibility="{x:Bind ViewModel.IsAddingOrEditing, Mode=OneWay}" />
                <!--<AppBarButton
                    Name="CancelButton"
                    Command="{x:Bind CancelCommand}"
                    Icon="Cancel"
                    Label="Cancel"
                    Visibility="{x:Bind ViewModel.IsAddingOrEditing, Mode=OneWay}" />-->
                <!--<AppBarButton
                    Name="DeleteButton"
                    Icon="Delete"
                    Label="Delete"
                    Visibility="{x:Bind ViewModel.IsNavigating, Mode=OneWay}">
                    <AppBarButton.Flyout>
                        <Flyout>
                            <RelativePanel Width="600">
                                <TextBlock
                                    Name="TextBlock"
                                    Style="{ThemeResource BaseTextBlockStyle}"
                                    Text="Product will be deleted. Do you want to continue?" />
                                <Button
                                    Name="YesButton"
                                    Click="DeleteConfirmationClick"
                                    Content="Yes"
                                    RelativePanel.Below="TextBlock" />
                                <Button
                                    Click="DeleteCancelClick"
                                    Content="No"
                                    RelativePanel.Below="TextBlock"
                                    RelativePanel.RightOf="YesButton" />
                            </RelativePanel>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>-->
            </CommandBar>

            <RelativePanel Name="RowDetailsPanel" Grid.Row="1">

                <ComboBox
                    Name="ProductsComboBox"
                    Width="200"
                    Header="Product"
                    IsEditable="false"
                    ItemsSource="{x:Bind ViewModel.ProductList}"
                    SelectedItem="{x:Bind ViewModel.SelectedTransactionDetail.ProductCode, Mode=OneWay}"
                    Visibility="{x:Bind ViewModel.IsAddingOrEditing, Mode=OneWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate x:DataType="viewmodels:ProductViewModel">
                            <RelativePanel>
                                <TextBlock Name="ProductCodeTextBlock" Text="{x:Bind ProductCode}" />
                                <TextBlock RelativePanel.RightOf="ProductCodeTextBlock" Text="{x:Bind ProductName}" />
                            </RelativePanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <TextBox
                    Name="QuantityTextBox"
                    Width="400"
                    Header="Qty"
                    IsEnabled="{x:Bind ViewModel.IsAddingOrEditing, Mode=OneWay}"
                    IsTabStop="True"
                    RelativePanel.Below="ProductsComboBox"
                    Text="{x:Bind Path=ViewModel.SelectedTransactionDetail.Quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <!--<TextBox
                Name="ProductCodeTextBox"
                Width="150"
                Header="Code"
                IsEnabled="{x:Bind ViewModel.IsAddingOrEditing, Mode=OneWay}"
                IsTabStop="True"
                Text="{x:Bind Path=ViewModel.SelectedTransactionDetail.ProductCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />-->
                <!--<TextBox
                Name="NameTextBox"
                Width="400"
                Header="Name"
                IsEnabled="{x:Bind ViewModel.IsAddingOrEditing, Mode=OneWay}"
                IsTabStop="True"
                RelativePanel.Below="CodeTextBox"
                Text="{x:Bind Path=ViewModel.SelectedProduct.ProductName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />-->

            </RelativePanel>

        </Grid>

        <controls:DataGrid
            Name="TransactionDetailsDataGrid"
            Grid.Row="3"
            AutoGenerateColumns="False"
            Background="LightGray"
            Foreground="Black"
            ItemsSource="{x:Bind ViewModel.TransactionDetailsList}"
            SelectionChanged="TransactionDetailsDataGrid_SelectionChanged"
            SelectionMode="Single">
            <controls:DataGrid.Columns>
                <controls:DataGridTextColumn
                    Binding="{Binding ProductCode}"
                    Header="Code"
                    IsReadOnly="True" />
                <controls:DataGridTextColumn
                    Binding="{Binding Quantity}"
                    Header="Name"
                    IsReadOnly="True" />
                <controls:DataGridTextColumn
                    Binding="{Binding Price}"
                    Header="Price"
                    IsReadOnly="True" />
                <controls:DataGridTextColumn
                    Binding="{Binding Value}"
                    Header="Value"
                    IsReadOnly="True" />
            </controls:DataGrid.Columns>
        </controls:DataGrid>

    </Grid>
</Page>
